//
//  Created by Ada <ada@thingvellir.net> on 2025-02-04
//  Copyright 2025 Overte e.V.
//
//  Distributed under the Apache license, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html

#ifndef hifi_CanvasEntityItem_h
#define hifi_CanvasEntityItem_h

#include "EntityItem.h"
#include <gpu/Texture.h>

class CanvasEntityItem : public EntityItem {
public:
    static EntityItemPointer factory(const EntityItemID& entityID, const EntityItemProperties& properties);

    CanvasEntityItem(const EntityItemID& entityItemID);
    ~CanvasEntityItem();

    bool shouldBePhysical() const override { return false; }

    virtual bool supportsDetailedIntersection() const override { return false; }

    ALLOW_INSTANTIATION // This class can be instantiated
    ENTITY_PROPERTY_SUBCLASS_METHODS

    QByteArray& getImageData();
    void setImageData(const QByteArray& data);
    void setImageSubData(const QByteArray& data, uint32_t dx, uint32_t dy, uint32_t dw, uint32_t dh, uint32_t sx, uint32_t sy, uint32_t sw, uint32_t sh);

    gpu::TexturePointer getTexture() const { return _texture; }

protected:
@Canvas_ENTITY_PROPS@

    QByteArray _imageData;
    gpu::TexturePointer _texture;
};

#endif // hifi_CanvasEntityItem_h
